FROM ubuntu:18.04

MAINTAINER Alexandre DEVELY 
RUN mkdir -p /composer/init.d
COPY etc/ /etc

# correct debconf: (TERM is not set, so the dialog frontend is not usable.)
ENV DEBCONF_FRONTEND noninteractive
ENV TERM linux
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections


RUN apt-get update && apt-get install -y  --no-install-recommends \
        sudo 				\
        && apt-get clean		\
	&& rm -rf /var/lib/apt/lists/*


# Add command desktoptojson 
RUN apt-get update && apt-get install -y --no-install-recommends \
     libkf5coreaddons-dev-bin 		\
     gnupg                              \
     software-properties-common         \
     locales				\
     locales-all			\
     cups-client			\
     libpulse0				\
     curl				\
     xauth				\
     openssl				\
     && apt-get clean			\
     && rm -rf /var/lib/apt/lists/*

COPY language-pack.list /tmp
RUN apt-get update && apt-get install -y --no-install-recommends $(cat /tmp/language-pack.list | awk '{print $1 }') \
        && locale-gen                   \
        && apt-get clean		\
	&& rm -rf /var/lib/apt/lists/*




############
COPY composer /composer

# this package nodejs include npm
RUN curl -sL https://deb.nodesource.com/setup_16.x | bash - \
        && apt-get update &&                            \
        apt-get install -y --no-install-recommends      \
                nodejs                                  \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Add nodejs service
RUN cd /composer/node/ocrun && npm install  
# RUN cd /composer/node/ocdownload && npm install

##########
RUN apt-get update && apt-get install -y --no-install-recommends 	\
     	krb5-user  							\
     	&& apt-get clean						\
	&& rm -rf /var/lib/apt/lists/*

     
# Next command use $BUSER context
ENV BUSER balloon
# RUN adduser --disabled-password --gecos '' $BUSER
# RUN id -u $BUSER &>/dev/null || 
RUN groupadd --gid 4096 $BUSER
RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups sudo $BUSER
# create an ubuntu user
# PASS=`pwgen -c -n -1 10`
# PASS=ballon
# Change password for user balloon

# if --build-arg BUILD_BALLON_PASSWORD=1, set NODE_ENV to 'development' or set to null otherwise.
#ENV BALLOON_PASSWORD=${BUILD_BALLOON_PASSWORD:+development}
# if BUILD_BALLOON_PASSWORD is null, set it to 'opendesktop' (or leave as is otherwise).
#ENV BALLOON_PASSWORD=${BUILD_BALLOON_PASSWORD:-opendesktop}

RUN echo "balloon:lmdpocpetit" | chpasswd $BUSER
#
# hack: be shure to own the home dir 
RUN mkdir -p /var/log/desktop && chown -R $BUSER:$BUSER /home/$BUSER /var/log/desktop


# copy files to composer
# new rc.xml remove the iconify decoration
COPY composer/safelinks.sh 			/composer
COPY composer/appli-docker-entrypoint.sh 	/composer

name: abcdesktoptemplatebuilder
on: push
env:
  TAG: dev
jobs:
  job1_init_minimal:
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}
       level0: ${{ steps.setmatrix.outputs.level0 }}   
       level1: ${{ steps.setmatrix.outputs.level1 }}
       level2: ${{ steps.setmatrix.outputs.level2 }} 
       level3: ${{ steps.setmatrix.outputs.level3 }} 
       nvidia: ${{ steps.setmatrix.outputs.nvidia }} 
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: "18.x"
      - name: Set Dynamic Matrix
        id: setmatrix
        run: |
           mininaljson=$(node rules/json2nop.js rules/minimal.json)
           echo "::set-output name=matrix::${mininaljson}"
           mininaljson=$(node rules/json2nop.js rules/level0.json)
           echo "::set-output name=level0::${mininaljson}"
           mininaljson=$(node rules/json2nop.js rules/level1.json)
           echo "::set-output name=level1::${mininaljson}"
           mininaljson=$(node rules/json2nop.js rules/level2.json)
           echo "::set-output name=level2::${mininaljson}"
           mininaljson=$(node rules/json2nop.js rules/level3.json)
           echo "::set-output name=level3::${mininaljson}"
           mininaljson=$(node rules/json2nop.js rules/nvidia.json)
           echo "::set-output name=nvidia::${mininaljson}"
  job2_do_nvidia:
    needs: job1_init_minimal
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.job1_init_minimal.outputs.nvidia) }}
    steps:
      - run: echo Run ${{ matrix.source }}
      - run: echo Run ${{ matrix.target }}
      - run: echo Run ${{ matrix.dockerfile }}
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.target }}
        # tag: ${{ github.head_ref || github.ref_name || 'dev' }}
        env:
          tag: 'main'
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/amd64, linux/arm64
          build-args: |
            BASE_IMAGE=${{ matrix.source }}
          push: true
          tags: |
            abcdesktopio/${{ matrix.target }}:${{ env.tag }}
  job2_do_minimal:
    needs: job1_init_minimal
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.job1_init_minimal.outputs.matrix) }}
    steps:
      - run: echo Run ${{ matrix.source }}
      - run: echo Run ${{ matrix.target }}
      - run: echo Run ${{ matrix.dockerfile }}
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Dump Dockerfile
        run: |
          echo Dockerfile ${{ matrix.dockerfile }}
          cat ${{ matrix.dockerfile }}
      - name: Build and push ${{ matrix.target }}
        # tag: ${{ github.head_ref || github.ref_name || 'dev' }}
        # build-args: minimal does not need TAG=${{ env.tag }}
        env: 
          tag: 'main' 
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/amd64, linux/arm64
          build-args: |
            BASE_IMAGE=${{ matrix.source }}
          push: true
          tags: |
            abcdesktopio/${{ matrix.target }}:${{ env.tag }}
  job3_do_level0:
    needs: [ job2_do_minimal, job1_init_minimal ]
    runs-on: ubuntu-latest
    strategy:
     matrix: ${{ fromJson(needs.job1_init_minimal.outputs.level0) }}
    steps:   
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.ref_name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.target }}
        # tag: ${{ github.head_ref || github.ref_name || 'dev' }}
        env: 
          tag: 'main' 
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/amd64, linux/arm64
          build-args: |
            BASE_IMAGE=${{ matrix.source }}
            TAG=${{ env.tag }}
          push: true
          tags: |
            abcdesktopio/${{ matrix.target }}:${{ env.tag }}
  job4_do_level1:
    needs: [ job3_do_level0, job1_init_minimal ]
    runs-on: ubuntu-latest
    strategy:
     matrix: ${{ fromJson(needs.job1_init_minimal.outputs.level1) }}
    steps:   
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.ref_name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.target }}
        # tag: ${{ github.head_ref || github.ref_name || 'dev' }}
        env:
          tag: 'main' 
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/amd64, linux/arm64
          build-args: |
            BASE_IMAGE=${{ matrix.source }}
            TAG=${{ env.tag }}
          push: true
          tags: |
            abcdesktopio/${{ matrix.target }}:${{ env.tag }}  
  job5_do_level2:
    needs: [ job4_do_level1, job1_init_minimal ]
    runs-on: ubuntu-latest
    strategy:
     matrix: ${{ fromJson(needs.job1_init_minimal.outputs.level2) }}
    steps:   
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.ref_name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.target }}
        # tag: ${{ github.head_ref || github.ref_name || 'dev' }}
        env:
          tag: 'main' 
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/amd64, linux/arm64
          build-args: |
            BASE_IMAGE=${{ matrix.source }}
            TAG=${{ env.tag }}
          push: true
          tags: |
            abcdesktopio/${{ matrix.target }}:${{ env.tag }}
  job6_do_level3:
    needs: [ job5_do_level2, job1_init_minimal ]
    runs-on: ubuntu-latest
    strategy:
     matrix: ${{ fromJson(needs.job1_init_minimal.outputs.level3) }}
    steps:   
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.ref_name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ matrix.target }}
        # tag: ${{ github.head_ref || github.ref_name || 'dev' }}
        env:
          tag: 'main' 
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/amd64, linux/arm64
          build-args: |
            BASE_IMAGE=${{ matrix.source }}
            TAG=${{ env.tag }}
          push: true
          tags: |
            abcdesktopio/${{ matrix.target }}:${{ env.tag }}

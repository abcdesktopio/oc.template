ARG TAG=dev
ARG BASE_IMAGE=abcdesktopio/oc.template.gtk
FROM ${BASE_IMAGE}:$TAG
MAINTAINER Alexandre DEVELY

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install --no-install-recommends --yes  \
	curl		\
	wget		\
        apt-transport-https \
	gnupg		\
	libxss1		\	
	libnotify4 	\
  	libxkbfile1 	\
 	libsecret-1-0	\
	git		\
	vim		\
	dbus-x11	\
	gnome-terminal	\
	&& rm -rf /var/lib/apt/lists/*

# lib for vscode but could be shared by other
RUN apt-get update && apt-get install --no-install-recommends --yes \
        libx11-xcb1     \
        libxcb-dri3-0   \
        libgbm1         \
        libdrm2         \
        libxtst6     	\
	gsfonts-x11 	\
	ssh		\ 
        && apt-get clean	\
	&& rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install --no-install-recommends --yes  \
	ubuntu-dev-tools	\
	build-essential		\
	automake		\
	autoconf		\
	&& rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install --no-install-recommends --yes  \
	evince                          \
        xarchiver                       \
        p7zip-full                      \
        unzip                           \
        file-roller                   	\
	&& rm -rf /var/lib/apt/lists/*  

RUN apt-get update && apt-get install --no-install-recommends --yes  \
        python3                      	\
        python3-pip                   	\
	python3-pylint-plugin-utils	\
	&& rm -rf /var/lib/apt/lists/* 


RUN  apt-get update && apt-get install --no-install-recommends --yes  \
	yarnpkg				\
        grunt				\
        && rm -rf /var/lib/apt/lists/*

# RUN DEBIAN_FRONTEND=noninteractive pip3 install 


# install Cloud Foundry Pivotal cf command line
RUN cd /tmp && wget "https://cli.run.pivotal.io/stable?release=linux64-binary" -O pivotal.tgz && tar -xvf pivotal.tgz && \
    mv cf /usr/local/bin

# Install adoptopenjdk.

RUN wget https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public && \
    gpg --no-default-keyring --keyring ./adoptopenjdk-keyring.gpg --import public && \
    gpg --no-default-keyring --keyring ./adoptopenjdk-keyring.gpg --export --output adoptopenjdk-archive-keyring.gpg && \
    rm adoptopenjdk-keyring.gpg && \
    mv adoptopenjdk-archive-keyring.gpg /usr/share/keyrings && \
    echo "deb [signed-by=/usr/share/keyrings/adoptopenjdk-archive-keyring.gpg] https://adoptopenjdk.jfrog.io/adoptopenjdk/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/adoptopenjdk.list && \
    apt-get update && \
    apt-cache search adoptopenjdk && \
    apt-get install -y --no-install-recommends adoptopenjdk-11-openj9-jre adoptopenjdk-11-openj9 && \
    rm -rf /var/lib/apt/lists/*
    
#
#RUN apt-get update && apt-get install --install-recommends --yes  \
#        default-jre         		\
#	default-jdk			\
#	&& rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install --no-install-recommends --yes  \
	libpostgresql-jdbc-java 	\
	libmariadb-dev-compat		\
	libc3p0-java  			\
	libcsvjdbc-java 		\
	libjt400-java 			\
	libpostgis-java  		\
	libspring-jdbc-java 		\
	sqlline 			\
	libmariadb-java 		\
	libdbd-mysql 			\
	mysql-client-8.0		\ 	
        && rm -rf /var/lib/apt/lists/* 

# install mysql-connector java
RUN cd /tmp && wget "https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java_8.0.25-1ubuntu20.04_all.deb" -O mysql-connector.deb && apt-get install ./mysql-connector.deb 



# add some networks tools
RUN apt-get update && apt-get install --no-install-recommends --yes  \
       netcat              		\
       net-tools                     	\
       wget				\
       curl				\
       telnet				\
       iputils-ping			\
       dnsutils				\
       tcpdump				\
       && rm -rf /var/lib/apt/lists/*



RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install  --no-install-recommends --yes  \
        maven                           \
        && rm -rf /var/lib/apt/lists/*
